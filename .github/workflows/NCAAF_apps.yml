name: NCAAF_apps

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Why are you running this manually?'
        required: false
        default: 'manual run'
  schedule:
    # Mondays at 12:00 UTC
    - cron: '0 12 * * 1'

permissions:
  contents: write

concurrency:
  group: ncaaf-apps-${{ github.ref }}
  cancel-in-progress: true

env:
  YEAR: '2025'
  CFBD_API_KEY: ${{ secrets.CFBD_API_KEY }}

jobs:
  gate:
    # Blocks scheduled runs before 2025-09-01; allows Mondays-only thereafter.
    # Manual runs remain allowed (jobs check event_name to proceed).
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.chk.outputs.ok }}
    steps:
      - id: chk
        shell: bash
        run: |
          CUTOFF="2025-09-01"
          TODAY=$(date -u +%F)
          echo "ok=false" >> "$GITHUB_OUTPUT"

          if [[ "$TODAY" < "$CUTOFF" ]]; then
            echo "Before cutoff ($TODAY < $CUTOFF); scheduled run blocked."
            exit 0
          fi

          DOW=$(date -u +%u) # 1=Mon ... 7=Sun
          if [[ "$DOW" -eq 1 ]]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
            echo "On/after cutoff and it's Monday. Proceed."
          else
            echo "Not Monday; scheduled run blocked."
          fi

  scrape_and_compile:
    name: "Box scores: scrape + compile"
    needs: gate
    if: ${{ github.event_name == 'workflow_dispatch' || needs.gate.outputs.ok == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests

      - name: Run scraper
        working-directory: NCAA_football/box_scores_app
        run: python box_scores_scraper.py

      - name: Inspect outputs
        working-directory: NCAA_football/box_scores_app
        run: |
          mkdir -p "data/weeks_${{ env.YEAR }}"
          ls -lah data || true
          ls -lah "data/weeks_${{ env.YEAR }}" || true

      - name: Commit weekly data
        working-directory: NCAA_football/box_scores_app
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if compgen -G "data/weeks_${{ env.YEAR }}/*.json" > /dev/null; then
            git add "data/weeks_${{ env.YEAR }}"/*.json
            git commit -m "Add week box score JSON for ${{ env.YEAR }}" || echo "No changes"
            git push
          else
            echo "No box score JSON found; skipping commit."
          fi

      - name: Run compiler
        working-directory: NCAA_football/box_scores_app
        run: python compile_box_scores_season.py

      - name: Commit compiled season file
        working-directory: NCAA_football/box_scores_app
        run: |
          if [ -f "data/boxscores_${{ env.YEAR }}.csv" ]; then
            git add "data/boxscores_${{ env.YEAR }}.csv"
            git commit -m "Update boxscores_${{ env.YEAR }}.csv" || echo "No changes"
            git push
          else
            echo "No compiled season file yet; skipping commit."
          fi

  daily-elo-update:
    name: ELO update
    needs: [gate, scrape_and_compile]   # serialized after box scores
    if: ${{ github.event_name == 'workflow_dispatch' || needs.gate.outputs.ok == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cfbd pandas

      - name: Run ELO scraper
        working-directory: NCAA_football/elo_ratings_app
        run: python weekly_elo_scraper.py

      - name: Inspect ELO outputs
        working-directory: NCAA_football/elo_ratings_app
        run: |
          mkdir -p "data/weeks_${{ env.YEAR }}"
          ls -lah data || true
          ls -lah "data/weeks_${{ env.YEAR }}" || true

      - name: Compile ELO season data (if weekly files exist)
        working-directory: NCAA_football/elo_ratings_app
        run: |
          if compgen -G "data/weeks_${{ env.YEAR }}/*.csv" > /dev/null; then
            python compile_elo_season.py
          else
            echo "No weekly ELO CSVs yet; skipping compile."
          fi

      - name: Commit and push ELO changes (if any)
        working-directory: NCAA_football/elo_ratings_app
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if compgen -G "data/weeks_${{ env.YEAR }}/*.csv" > /dev/null; then
            git add "data/weeks_${{ env.YEAR }}"/*.csv
          fi
          if [ -f "data/elo_ratings_${{ env.YEAR }}.csv" ]; then
            git add "data/elo_ratings_${{ env.YEAR }}.csv"
          fi
          git diff --cached --quiet || (git commit -m "Update ELO for ${{ env.YEAR }}" && git push) || echo "No ELO changes to commit"

  update-rankings:
    name: Rankings
    needs: [gate, daily-elo-update]     # serialized after ELO
    if: ${{ github.event_name == 'workflow_dispatch' || needs.gate.outputs.ok == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Verify CFBD_API_KEY is set
        run: |
          if [ -z "${CFBD_API_KEY}" ]; then
            echo "CFBD_API_KEY is not set. Add it in Settings → Secrets and variables → Actions."
            exit 1
          fi
          echo "CFBD_API_KEY present (masked)."

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas

      - name: Run weekly scraper
        working-directory: NCAA_football/rankings_app
        env:
          CFBD_API_KEY: ${{ env.CFBD_API_KEY }}
        run: python weekly_polls_scraper.py

      - name: Compile polls into CSV
        working-directory: NCAA_football/rankings_app
        run: python compile_polls.py

      - name: Commit & push updated data
        working-directory: NCAA_football/rankings_app
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if compgen -G "data/weeks_${{ env.YEAR }}/*.json" > /dev/null; then
            git add "data/weeks_${{ env.YEAR }}"/*.json
          fi
          if [ -f "data/weekly_rankings_${{ env.YEAR }}.csv" ]; then
            git add "data/weekly_rankings_${{ env.YEAR }}.csv"
          fi
          git diff --cached --quiet || (git commit -m "Automated update: weekly_rankings for ${{ env.YEAR }} [skip ci]" && git push)

  team-stats:
    name: Team stats
    needs: [gate, update-rankings]      # serialized last
    if: ${{ github.event_name == 'workflow_dispatch' || needs.gate.outputs.ok == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Verify CFBD_API_KEY is set
        run: |
          if [ -z "${CFBD_API_KEY}" ]; then
            echo "CFBD_API_KEY is not set. Add it in Settings → Secrets and variables → Actions."
            exit 1
          fi
          echo "CFBD_API_KEY present (masked)."

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas

      - name: Run weekly team stats scraper
        working-directory: NCAA_football/team_stats_app
        env:
          CFBD_API_KEY: ${{ env.CFBD_API_KEY }}
        run: python weekly_team_stats_scraper.py

      - name: Compile team stats into CSV
        working-directory: NCAA_football/team_stats_app
        run: python compile_team_stats.py

      - name: Commit & push updated data
        working-directory: NCAA_football/team_stats_app
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if compgen -G "data/weeks_${{ env.YEAR }}/*.csv" > /dev/null; then
            git add "data/weeks_${{ env.YEAR }}"/*.csv
          fi
          if [ -f "data/weekly_advanced_stats_${{ env.YEAR }}.csv" ]; then
            git add "data/weekly_advanced_stats_${{ env.YEAR }}.csv"
          fi
          git diff --cached --quiet || (git commit -m "Automated update: team stats for ${{ env.YEAR }} [skip ci]" && git push)
